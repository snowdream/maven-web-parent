<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>
	<groupId>com.github.snowdream.web</groupId>
	<artifactId>parent</artifactId>
	<packaging>pom</packaging>
	<version>0.0.2-SNAPSHOT</version>
	<name>maven-web-parent</name>
	<description>The parent pom for the web project with maven</description>
	<url>https://github.com/snowdream/maven-web-parent</url>
	<inceptionYear>2013</inceptionYear>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:snowdream/maven-web-parent.git</connection>
		<developerConnection>scm:git:git@github.com:snowdream/maven-web-parent.git</developerConnection>
		<tag>HEAD</tag>
		<url>git@github.com:snowdream/maven-web-parent.git</url>
	</scm>
	<organization>
		<name>Snowdream Team</name>
		<url>https://github.com/snowdream</url>
	</organization>
	<developers>
		<developer>
			<id>snowdream</id>
			<name>YangHui</name>
			<email>yanghui1986527@gmail.com</email>
			<url>https://github.com/snowdream</url>
			<organization>Snowdream Team</organization>
			<organizationUrl>https://github.com/snowdream</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
				<role>contributor</role>
			</roles>
			<timezone>+8</timezone>
			<properties>
				<qq>273247606</qq>
				<email>yanghui1986527@gmail.com</email>
			</properties>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>YangHui</name>
			<email>yanghui1986527@gmail.com</email>
			<url>https://github.com/snowdream</url>
			<organization>Snowdream Team</organization>
			<organizationUrl>https://github.com/snowdream</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
				<role>contributor</role>
			</roles>
			<timezone>+8</timezone>
			<properties>
				<qq>273247606</qq>
				<email>yanghui1986527@gmail.com</email>
			</properties>
		</contributor>
	</contributors>
	<issueManagement>
		<system>Github</system>
		<url>https://github.com/snowdream/maven-web-parent/issues</url>
	</issueManagement>
	<ciManagement>
		<system>travis-ci</system>
		<url>https://travis-ci.org/snowdream/maven-web-parent</url>
		<notifiers>
			<notifier>
				<type>mail</type>
				<sendOnError>true</sendOnError>
				<sendOnFailure>true</sendOnFailure>
				<sendOnSuccess>false</sendOnSuccess>
				<sendOnWarning>false</sendOnWarning>
				<configuration>
					<address>yanghui1986527@gmail.com</address>
				</configuration>
			</notifier>
		</notifiers>
	</ciManagement>
	<mailingLists>
		<mailingList>
			<name>User List</name>
			<subscribe>user-subscribe@127.0.0.1</subscribe>
			<unsubscribe>user-unsubscribe@127.0.0.1</unsubscribe>
			<post>user@127.0.0.1</post>
			<archive>http://127.0.0.1/user/</archive>
			<otherArchives>
				<otherArchive>http://base.google.com/base/1/127.0.0.1</otherArchive>
			</otherArchives>
		</mailingList>
	</mailingLists>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<platform.version>4.1.1.4</platform.version>
		<platform.sdk.version>16</platform.sdk.version>
		<junit.version>4.11</junit.version>
		<maven.compile.plugin.android.version>3.6.0</maven.compile.plugin.android.version>
		<maven.compile.plugin.version>3.1</maven.compile.plugin.version>
		<jetty.maven.plugin.version>9.0.4.v20130625</jetty.maven.plugin.version>
		<nexus.staging.maven.plugin.version>1.4.5</nexus.staging.maven.plugin.version>
		<org.springframework.version>3.2.4.RELEASE</org.springframework.version>
		<org.springframework.security.version>3.1.4.RELEASE</org.springframework.security.version>
		<org.springframework.security.oauth.version>1.0.5.RELEASE</org.springframework.security.oauth.version>
		<jackson.version>2.2.2</jackson.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<!-- Core utilities used by other modules. Define this if you use Spring 
				Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Expression Language (depends on spring-core) Define this if you use 
				Spring Expression APIs (org.springframework.expression.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
				this if you use Spring Bean APIs (org.springframework.beans.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
				spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
				spring-beans) This is the central artifact for Spring's Dependency Injection 
				Container and is generally always defined -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Various Application Context utilities, including EhCache, JavaMail, 
				Quartz, and Freemarker integration Define this if you need any of these integrations -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
				spring-aop, spring-context) Define this if you use Spring Transactions or 
				DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
				spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
				and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
				Define this if you need ORM (org.springframework.orm.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
				JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
				spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Web application development utilities applicable to both Servlet 
				and Portlet Environments (depends on spring-core, spring-beans, spring-context) 
				Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
				web framework with Spring (org.springframework.web.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
				spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
				Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
				spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
				Container (org.springframework.web.portlet.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc-portlet</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>

			<!-- Support for testing Spring applications with tools such as JUnit 
				and TestNG This artifact is generally always defined with a 'test' scope 
				for the integration testing framework and unit testing stubs -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${org.springframework.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Spring Security is a powerful and highly customizable authentication 
				and access-control framework. It is the de-facto standard for securing Spring-based 
				applications. -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${org.springframework.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${org.springframework.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${org.springframework.security.version}</version>
			</dependency>

			<!-- SPRING SECURITY OAUTH -->
			<dependency>
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth</artifactId>
				<version>${org.springframework.security.oauth.version}</version>
			</dependency>

			<!-- Jackson Json -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-jaxb-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<build>
		<finalName>${project.artifactId}</finalName>
		<sourceDirectory>src</sourceDirectory>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compile.plugin.version}</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty.maven.plugin.version}</version>
					<configuration>
						<scanIntervalSeconds>10</scanIntervalSeconds>
						<stopKey>foo</stopKey>
						<stopPort>9999</stopPort>
					</configuration>
					<executions>
						<execution>
							<id>start-jetty</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
							<configuration>
								<scanIntervalSeconds>0</scanIntervalSeconds>
								<daemon>true</daemon>
							</configuration>
						</execution>
						<execution>
							<id>stop-jetty</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
